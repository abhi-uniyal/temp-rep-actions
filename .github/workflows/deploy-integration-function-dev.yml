name: Deploy Integration Azure Function [stage]
on:
  workflow_dispatch:
  push:
    branches:
      - funct-test-local-ref-data 

env:
  AZURE_FUNCTIONAPP_NAME: "fn-invoker-application"
  NODE_VERSION: "14.17.3"
  AZURE_STORAGE_CONTAINER_NAME: "ksad-graph-raw-data-dev"
  AZURE_STORAGE_FOLDER_PATH: "pia/test_folder/merged_rdf_files"
  AZURE_STORAGE_CONTAINER_NAME_REFINED_DATA: "ksad-graph-raw-data-dev"
  AZURE_STORAGE_FOLDER_PATH_REFINED_DATA: "pia/test_folder/refined_files"
  KEY_VAULT_NAME: "kv-ksad-db-dev"
  GRAPHDB_HOST_IP: "10.32.1.14"
  GRAPHDB_HOST_PORT: "7200"


jobs:
  deploy-storage-graphdb-integration-function:
    name: Deploy Azure Storage Container & GraphDB Integration Function
    runs-on: ubuntu-latest
    environment: development
    defaults:
      run:
        shell: bash
        working-directory: storage-graphdb-integration-function
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
          node-version: ${{ env.NODE_VERSION }}

    - name: "Az CLI login"
      uses: azure/login@v1
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
    - uses: Azure/get-keyvault-secrets@v1
      with:
        keyvault: ${{ env.KEY_VAULT_NAME }}
        secrets: 'AZURE-STORAGE-ACCOUNT-NAME, AZURE-STORAGE-ACCOUNT-KEY, AZURE-STORAGE-CONNECTION-STRING'
      id: myGetSecretAction

    - name: Setup package feed for azure-functions-core-tools
      run: |
          wget -q https://packages.microsoft.com/config/ubuntu/19.04/packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb

    - name: Install azure-functions-core-tools
      run: |
          sudo apt-get update
          sudo apt-get install azure-functions-core-tools-4

    - name: Install production only dependency
      run: npm install

    - name: Create appsettings
      run: |
          sudo apt-get install jq
          echo '{
            "IsEncrypted": false,
            "Values": {
              "FUNCTIONS_WORKER_RUNTIME": "node",
              "WEBSITE_NODE_DEFAULT_VERSION": "14",
              "WEBSITE_RUN_FROM_PACKAGE": "1",
              "GRAPHDB_HOST_IP": "${{ env.GRAPHDB_HOST_IP }}",
              "GRAPHDB_HOST_PORT": "${{ env.GRAPHDB_HOST_PORT }}",
              "AZURE_STORAGE_CONTAINER_NAME": "${{ env.AZURE_STORAGE_CONTAINER_NAME }}",
              "AZURE_STORAGE_FOLDER_PATH": "${{ env.AZURE_STORAGE_FOLDER_PATH }}",
              "AZURE_STORAGE_CONTAINER_NAME_REFINED_DATA": "${{ env.AZURE_STORAGE_CONTAINER_NAME_REFINED_DATA }}",
              "AZURE_STORAGE_FOLDER_PATH_REFINED_DATA": "${{ env.AZURE_STORAGE_FOLDER_PATH_REFINED_DATA }}",
              "AZURE_STORAGE_ACCOUNT_NAME": "${{ steps.myGetSecretAction.outputs.AZURE-STORAGE-ACCOUNT-NAME }}",
              "AZURE_STORAGE_ACCOUNT_KEY": "${{ steps.myGetSecretAction.outputs.AZURE-STORAGE-ACCOUNT-KEY }}",
              "ENVIRONMENT": "${{ env.ENVIRONMENT }}",
              "FN_STORAGE_CONNECTION_STRING": "${{ steps.myGetSecretAction.outputs.AZURE-STORAGE-CONNECTION-STRING }}"
            }
          }' | jq . > local.settings.json

    - name: Update function.json
      run: |
        # Read the function.json file content
        content=$(cat fnStorageGraphdbIntegration/function.json)

        #Update the container name
        content=$(echo "$content" | sed 's/FN_CONTAINER_NAME/${{ env.AZURE_STORAGE_CONTAINER_NAME }}/g')
        
        #Update the folder path may contain / which is delimeter
        folder_path=$(echo "${{ env.AZURE_STORAGE_FOLDER_PATH }}" | sed 's/\//\\\//g')
        content=$(echo "$content" | sed "s|FN_FOLDER_PATH|$folder_path|")
        
        #Update the content in function.json
        echo "$content" > fnStorageGraphdbIntegration/function.json

        ################################## Refined Data #################################################
        # Read the function.json file content
        refined_content=$(cat fnStorageGraphdbIntegrationRefinedData/function.json)

        #Update the container name
        refined_content=$(echo "$refined_content" | sed 's/FN_CONTAINER_NAME/${{ env.AZURE_STORAGE_CONTAINER_NAME_REFINED_DATA }}/g')
        
        #Update the folder path may contain / which is delimeter
        refined_folder_path=$(echo "${{ env.AZURE_STORAGE_FOLDER_PATH_REFINED_DATA }}" | sed 's/\//\\\//g')
        refined_content=$(echo "$refined_content" | sed "s|FN_FOLDER_PATH|$refined_folder_path|")
        
        #Update the content in function.json
        echo "$refined_content" > fnStorageGraphdbIntegration/function.json

    - name: Deploy to azure
      run: |
          func azure functionapp publish ${{ env.AZURE_FUNCTIONAPP_NAME }} --javascript --publish-local-settings --overwrite-settings
          echo "Finished deployment"
